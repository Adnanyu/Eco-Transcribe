-- CREATE TABLE
--     IF NOT EXISTS users (
--         user_id INT NOT NULL,
--         first_name VARCHAR(15) NOT NULL,
--         last_name VARCHAR(15) NOT NULL,
--         email VARCHAR(50) NOT NULL,
--         phone VARCHAR(25),
--         profile_pic_url VARCHAR(250),
--         joined_date DATE NOT NULL,
--         translation_language VARCHAR(25),
--         default_language VARCHAR(25),
--         hashed_passowrd VARCHAR(255),
--         salt TEXT,
--         PRIMARY KEY (user_id)
--     );

CREATE TABLE
    IF NOT EXISTS recording (
        id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        recording_url VARCHAR(250) NOT NULL,
        title VARCHAR(250) NOT NULL,
        owner_id INT ,
        recording_type ENUM('RECORDED', 'UPLOADED','LINK') NOT NULL,
        transcript INT,
        recorded_date TIMESTAMP,
        duration INT,
        recording_start_time timestamp,
        recording_end_time timestamp,
        sub_transcripts INT,
        translated_transcript INT,
        PRIMARY KEY (id)
        -- FOREIGN KEY (owner_id) REFERENCES users(user_id)
        -- FOREIGN KEY (transcript) REFERENCES transcripts(transcripts_id),
        -- FOREIGN KEY (translated_transcript) REFERENCES translated_transcript(transcript_id),
        -- FOREIGN KEY (sub_trancript) REFERENCES sub_transcript(sub_transcript_id)
    );

CREATE TABLE
    IF NOT EXISTS transcript (
        transcript_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        recording_id INT ,
        text TEXT,
        summary TEXT,
        language VARCHAR,
        PRIMARY KEY (transcript_id),
        FOREIGN KEY (recording_id) REFERENCES recording(id)
    );

CREATE TABLE
    IF NOT EXISTS summary (
        summary_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        recording_id INT,
        text VARCHAR,
        langauge VARCHAR,
        PRIMARY KEY (summary_id),
        FOREIGN KEY (recording_id) REFERENCES recording(id)
    );

-- CREATE TABLE
--     IF NOT EXISTS translated_transcript (
--         transcript_id INT,
--         recording_id INT,
--         text VARCHAR,
--         summery VARCHAR,
--         language VARCHAR,
--         PRIMARY KEY (transcript_id),
--         FOREIGN KEY (recording_id) REFERENCES recordings(recording_id)
--     );

-- CREATE TABLE
--     IF NOT EXISTS sub_transcript (
--         sub_transcript_id INT,
--         recording_id INT,
--         text VARCHAR,
--         start_time VARCHAR,
--         end_time VARCHAR,
--         PRIMARY KEY (sub_transcript_id),
--         FOREIGN KEY (recording_id) REFERENCES recordings(recording_id)
--     );

-- ALTER TABLE recordings ADD FOREIGN KEY (transcript) REFERENCES transcripts(transcript_id);
-- ALTER TABLE recordings ADD FOREIGN KEY (translated_transcript) REFERENCES translated_transcript(transcript_id);
-- ALTER TABLE recordings ADD FOREIGN KEY (sub_trancript) REFERENCES sub_transcript(sub_transcript_id);

-- ALTER TABLE recording ALTER COLUMN id RESTART WITH (SELECT MAX(id) FROM recording) + 1;
-- ALTER TABLE transcript ALTER COLUMN id RESTART WITH (SELECT MAX(transcript_id) FROM transcript) + 1;
ALTER TABLE transcript ALTER COLUMN transcript_id RESTART WITH 1;